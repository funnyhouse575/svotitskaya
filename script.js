document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.feature-card').forEach(card => {
        const bgImage = card.getAttribute('data-bg');
        if (bgImage) {
            card.style.setProperty('--bg-image', `url('images/${bgImage}')`);
        }
    });
    const burger = document.querySelector('.burger-emoji');
    const photo = document.querySelector('.teacher-photo');
    const heroImage = document.querySelector('.hero-image');
    let eatCount = 0;
    let currentScale = 1;

    burger.style.cursor = 'pointer';

    // –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è
    function checkCollision() {
        const photoRect = photo.getBoundingClientRect();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ —Å –±—É—Ä–≥–µ—Ä–æ–º
        const burgerRect = burger.getBoundingClientRect();
        const burgerCollision = !(photoRect.right < burgerRect.left ||
                                photoRect.left > burgerRect.right ||
                                photoRect.bottom < burgerRect.top ||
                                photoRect.top > burgerRect.bottom);

        if (burgerCollision) {
            eatEverything();
            return;
        }

        // –û–±—ã—á–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –ø–æ–µ–¥–∞–Ω–∏—è
        const elementsToEat = document.querySelectorAll(`
            .feature-card,
            .experience-card,
            .timeline-item,
            .contact-item,
            .schedule-item,
            .hero-text p:not(.subtitle),
            .section h2,
            .footer
        `);

        elementsToEat.forEach(element => {
            if (element.classList.contains('eaten')) return;

            const elementRect = element.getBoundingClientRect();

            const collision = !(photoRect.right < elementRect.left + 50 ||
                              photoRect.left > elementRect.right - 50 ||
                              photoRect.bottom < elementRect.top + 30 ||
                              photoRect.top > elementRect.bottom - 30);

            if (collision && elementRect.width > 10 && elementRect.height > 10) {
                eatElement(element);
            }
        });
    }

    // –§—É–Ω–∫—Ü–∏—è "—Å—ä–µ–¥–∞–Ω–∏—è" —ç–ª–µ–º–µ–Ω—Ç–∞
    function eatElement(element) {
        element.classList.add('eaten');

        element.style.transition = 'all 1.5s ease';
        element.style.transform = 'scale(0.8) rotate(10deg)';
        element.style.opacity = '0.7';

        setTimeout(() => {
            element.style.transform = 'scale(0) rotate(45deg)';
            element.style.opacity = '0';
        }, 300);

        setTimeout(() => {
            if (element.parentNode) {
                element.style.display = 'none';
            }
        }, 1800);
    }

    // –§—É–Ω–∫—Ü–∏—è —Å—ä–µ–¥–∞–Ω–∏—è –í–°–ï–ì–û
    function eatEverything() {
        // –ü—Ä—è—á–µ–º –±—É—Ä–≥–µ—Ä
        burger.style.display = 'none';

        // –°—ä–µ–¥–∞–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∫—Ä–æ–º–µ —Ñ–æ—Ç–æ –∏ –µ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
        const allElements = document.querySelectorAll('body > *:not(.hero):not(.hero-image):not(.teacher-photo)');

        allElements.forEach(element => {
            if (element === photo || element === burger || element === heroImage) return;

            if (!element.classList.contains('eaten') && element.style.display !== 'none') {
                element.style.transition = 'all 2s ease';
                element.style.transform = 'scale(0) rotate(360deg)';
                element.style.opacity = '0';

                setTimeout(() => {
                    if (element.parentNode && element.style.display !== 'none') {
                        element.style.display = 'none';
                    }
                }, 2000);
            }
        });

        // –î–µ–ª–∞–µ–º –±–µ–ª—ã–π —Ñ–æ–Ω –∏ —Ü–µ–Ω—Ç—Ä–∏—Ä—É–µ–º —Ñ–æ—Ç–æ
        setTimeout(() => {
            document.body.classList.add('final-state');
        }, 1000);
    }

    burger.addEventListener('click', function() {
        // –°–æ–∑–¥–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —ç–º–æ–¥–∑–∏
        const emojis = ['üçî', 'üçü', 'ü•§'];
        const randomEmoji = emojis[Math.floor(Math.random() * emojis.length)];

        // –°–æ–∑–¥–∞–µ–º –ª–µ—Ç—è—â–∏–π —ç–º–æ–¥–∑–∏
        const flyingEmoji = document.createElement('div');
        flyingEmoji.textContent = randomEmoji;
        flyingEmoji.style.cssText = `
            position: fixed;
            font-size: 2rem;
            z-index: 1000;
            pointer-events: none;
            transition: all 1s ease-in-out;
        `;

        // –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è (–≥–¥–µ –±—É—Ä–≥–µ—Ä)
        const burgerRect = burger.getBoundingClientRect();
        flyingEmoji.style.left = burgerRect.left + 'px';
        flyingEmoji.style.top = burgerRect.top + 'px';

        document.body.appendChild(flyingEmoji);

        // –ê–Ω–∏–º–∞—Ü–∏—è –∫ —Ñ–æ—Ç–æ
        setTimeout(() => {
            const photoRect = photo.getBoundingClientRect();
            flyingEmoji.style.left = photoRect.left + photoRect.width / 2 + 'px';
            flyingEmoji.style.top = photoRect.top + photoRect.height / 2 + 'px';
            flyingEmoji.style.opacity = '0';
            flyingEmoji.style.transform = 'scale(0.5)';
        }, 50);

        // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ñ–æ—Ç–æ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è
        setTimeout(() => {
            flyingEmoji.remove();
            eatCount++;

            // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ñ–æ—Ç–æ –Ω–∞ 8% –∫–∞–∂–¥—ã–π —Ä–∞–∑ –ë–ï–°–ö–û–ù–ï–ß–ù–û
            currentScale = 1 + (eatCount * 0.08);
            photo.style.transform = `scale(${currentScale})`;
            photo.style.transition = 'transform 1.2s ease';

            // –ü–æ—Å–ª–µ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
            setTimeout(() => {
                checkCollision();
            }, 1200);
        }, 1100);
    });
});